"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[323],{94190:e=>{e.exports=JSON.parse('{"functions":[],"properties":[],"types":[{"name":"ToolbarButtonProps","desc":"Default values:\\n```lua\\n{\\n  name = \\"\\",\\n  tooltip = \\"\\",\\n  icon = \\"\\",\\n  enabled = true,\\n  active = false,\\n  alwaysAvailable = true,\\n}\\n```","fields":[{"name":"id","lua_type":"string","desc":"The id of the button"},{"name":"name","lua_type":"string?","desc":"The name/label of the button"},{"name":"tooltip","lua_type":"string?","desc":"The tooltip to display when hovering over the button"},{"name":"icon","lua_type":"(string | number)?","desc":"The icon to display for the button"},{"name":"enabled","lua_type":"boolean?","desc":"Whether or not the button is enabled"},{"name":"active","lua_type":"boolean?","desc":"Whether or not the button displays as active (pressed down)"},{"name":"alwaysAvailable","lua_type":"boolean?","desc":"Whether or not the button is always available, even when the viewport is not visible"}],"source":{"line":49,"path":"src/ToolbarButton.lua"}}],"name":"ToolbarButton","desc":"```lua\\nRoact.createElement(ToolbarButton, {\\n  id = \\"Button1\\",\\n  name = \\"Button 1\\",\\n  active = true,\\n\\n  [Roact.Event.Click] = function(rbx: PluginToolbarButton)\\n    print(\\"Clicked!\\")\\n  end,\\n})\\n```","source":{"line":17,"path":"src/ToolbarButton.lua"}}')}}]);