"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[644],{92828:e=>{e.exports=JSON.parse('{"functions":[{"name":"pick","desc":"Extracts event props from the given props table.","params":[{"name":"props","desc":"","lua_type":"table"}],"returns":[{"desc":"","lua_type":"{ [string]: (...any) -> void }"}],"function_type":"static","source":{"line":28,"path":"src/Util/eventProps.lua"}},{"name":"changed","desc":"Extracts event props that have changed from the given props\\ntables. This is useful for determining which events need to\\nbe connected/disconnected.","params":[{"name":"prev","desc":"The previous props","lua_type":"table"},{"name":"next","desc":"The new props","lua_type":"table"}],"returns":[{"desc":"","lua_type":"{ [string]: (...any) -> void | userdata }"}],"function_type":"static","source":{"line":56,"path":"src/Util/eventProps.lua"}}],"properties":[{"name":"NONE","desc":"An empty userdata value that can be used to represent a\\nnon-existent event prop.","lua_type":"userdata","source":{"line":17,"path":"src/Util/eventProps.lua"}}],"types":[],"name":"eventProps","desc":"An internal utility module for extracting event props from\\ncomponent props.","private":true,"source":{"line":9,"path":"src/Util/eventProps.lua"}}')}}]);